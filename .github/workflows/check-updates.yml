jobs:
  apt-fast:
    name: Check timestamps whether snowstep/apt-fast is older than libraries
    needs:
      - dockerhub
      - libraries
    outputs:
      outdated-count: ${{ steps.newer.outputs.count }}
    runs-on: ubuntu-latest
    steps:
      - name: Download bullseye
        uses: actions/download-artifact@v3
        with:
          name: bullseye
      - name: Download focal
        uses: actions/download-artifact@v3
        with:
          name: focal
      - name: Download jammy
        uses: actions/download-artifact@v3
        with:
          name: jammy
      - id: newer
        name: Count how many libraries are newer than snowstep/apt-fast
        run: |
          dockerhub=${{ needs.dockerhub.outputs.timestamp }}
          count=$(
            for name in bullseye focal jammy; do
              read -r timestamp < $name.txt
              echo $name=$timestamp >&2
              [[ $dockerhub -lt $timestamp ]] \
                && { \
                  echo "libraries/$name is newer than snowstep/apt-fast:$name" \
                  | tee >(cat >&2); \
                } \
                || :
            done | wc -l
          )
          echo count=$count >&2
          echo count=$count > $GITHUB_OUTPUT
        shell: bash
  dockerhub:
    name: See the latest snowstep/apt-fast on DockerHub
    outputs:
      timestamp: ${{ steps.latest.outputs.timestamp }}
    runs-on: ubuntu-latest
    steps:
      - id: latest
        name: Get the latest timestamp snowstep/apt-fast
        run: |
          api=https://hub.docker.com/v2/namespaces/snowstep/repositories/apt-fast/tags
          last_pushed=$(
            curl -s $api | jq -cr '[.results[]|select(.name=="latest").images[]]|max_by(.last_pushed).last_pushed'
          )
          timestamp=$(date --date=$last_pushed "+%s")
          printf 'apt-fast: %s (%s)\n' $last_pushed $timestamp >&2
          printf 'timestamp=%s\n' $timestamp >> $GITHUB_OUTPUT
        shell: bash
  libraries:
    name: See the latest ${{ matrix.dist }}:${{ matrix.tag }} on DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest timestamp of ${{ matrix.dist }}:${{ matrix.tag }}
        run: |
          api=https://hub.docker.com/v2/namespaces/library/repositories/${{ matrix.dist }}/tags
          last_pushed=$(
            curl -s $api | jq -cr '.results[]|select(.name=="${{ matrix.tag }}").images[]|select(.architecture=="amd64").last_pushed'
          )
          timestamp=$(date --date=$last_pushed "+%s")
          printf '%s: %s (%s)\n' ${{ matrix.name }} $last_pushed $timestamp >&2
          echo $timestamp > ${{ matrix.name }}.txt
        shell: bash
      - name: Upload ${{ matrix.name }}.txt
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.txt
          retention-days: 1
    strategy:
      matrix:
        include:
          - dist: debian
            name: bullseye
            tag: stable-slim
          - dist: ubuntu
            name: focal
            tag: 18.04
          - dist: ubuntu
            name: jammy
            tag: latest
  publish-if-outdated:
    if: ${{ needs.apt-fast.outputs.outdated-count != 0 }}
    name: Publish if outdated
    needs:
      - apt-fast
    secrets:
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    uses: ./.github/workflows/publish.yml
name: Check updates
on:
  schedule:
    - cron: '55 */8 * * *'
  workflow_dispatch:
