jobs:
  apt-fast:
    name: Check timestamps whether snowstep/apt-fast is older than libraries
    needs:
      - dockerhub
      - libraries
    outputs:
      outdated-count: ${{ steps.newer.outputs.count }}
    runs-on: ubuntu-latest
    steps:
      - name: Download debian
        uses: actions/download-artifact@v4
        with:
          name: debian
      - name: Download ubuntu
        uses: actions/download-artifact@v4
        with:
          name: ubuntu
      - id: newer
        name: Count how many libraries are newer than snowstep/apt-fast
        run: |
          dockerhub=${{ needs.dockerhub.outputs.timestamp }}
          count=$(
            for key in debian:bookworm debian:bullseye debian:trixie ubuntu:focal ubuntu:jammy ubuntu:noble; do
              dist=${key%%:*}
              name=${key##*:}
              matched=$(grep -P "^$name=" < $dist.txt)
              timestamp=${matched##*=}
              echo $name=$timestamp >&2
              [[ $dockerhub -lt $timestamp ]] \
                && { \
                  echo "libraries/$name is newer than snowstep/apt-fast:$name" \
                    | tee >(cat >&2); \
                } \
                || :
            done | wc -l
          )
          echo count=$count >&2
          echo count=$count > $GITHUB_OUTPUT
        shell: bash
  dockerhub:
    name: See the latest snowstep/apt-fast on DockerHub
    outputs:
      timestamp: ${{ steps.latest.outputs.timestamp }}
    runs-on: ubuntu-latest
    steps:
      - id: latest
        name: Get the latest timestamp snowstep/apt-fast
        run: |
          api=https://hub.docker.com/v2/namespaces/snowstep/repositories/apt-fast/tags
          last_pushed=$(
            curl -s $api | jq -cr '[.results[]|select(.name=="latest").images[]]|max_by(.last_pushed).last_pushed'
          )
          timestamp=$(date --date=$last_pushed "+%s")
          printf 'apt-fast: %s (%s)\n' $last_pushed $timestamp >&2
          printf 'timestamp=%s\n' $timestamp >> $GITHUB_OUTPUT
        shell: bash
  libraries:
    name: See ${{ matrix.dist }} on DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Get timestamps of ${{ matrix.dist }}
        run: |
          api="https://hub.docker.com/v2/namespaces/library/repositories/${{ matrix.dist }}/tags?page=1&page_size=100"
          while [[ $api != "null" ]]; do
            echo "::group::${api#*\?}"
            json=$(curl -s "$api")
            tsv=$(jq -cr '.results[]|[.name,[.images[]|select(.architecture=="amd64").last_pushed][0]]|@tsv' <<< $json)
            [[ -n $tsv ]] && {
              sed -r 's/\t/ /g' <<< $tsv | while read -r name d; do
                echo $name=$(date --date=$d "+%s") | tee -a ${{ matrix.dist }}.txt
              done
            }
            echo ::endgroup::
            api=$(jq -Mcr '.next' <<< $json)
          done
        shell: bash
      - name: Upload ${{ matrix.dist }}.txt
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dist }}
          path: ${{ matrix.dist }}.txt
          retention-days: 1
    strategy:
      matrix:
        dist:
          - debian
          - ubuntu
  publish-if-outdated:
    if: ${{ needs.apt-fast.outputs.outdated-count != 0 }}
    name: Publish if outdated
    needs:
      - apt-fast
    secrets:
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    uses: ./.github/workflows/publish.yml
name: Check updates
on:
  schedule:
    - cron: '55 2,10,18 * * *'
  workflow_dispatch:
