env:
  IMAGE_NAME: apt-fast
jobs:
  docker:
    if: github.ref_type == 'tag'
    name: Publish the image to DockerHub
    needs:
      - ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-bullseye-buildx-${{ github.sha }}
          path: /tmp/.buildx-cache-bullseye
          restore-keys: |
            ${{ runner.os }}-bullseye-buildx-
      - name: Generate Dockerfile
        run: printf 'FROM debian:stable-slim\nADD install.sh /\nRUN ./install.sh\n' > Dockerfile
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Run Buildx and Push it to DockerHub
        uses: docker/build-push-action@v3
        with:
          cache-from: type=local,src=/tmp/.buildx-cache-bullseye
          cache-to: type=local,dest=/tmp/.buildx-cache-bullseye-new,mode=max
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Move cache
        run: |
          rm -fr /tmp/.buildx-cache-bullseye
          mv /tmp/.buildx-cache-bullseye-new /tmp/.buildx-cache-bullseye
      - name: Patch the description
        run: |
          DOCKERHUB_PASSWORD="${{ secrets.DOCKERHUB_PASSWORD }}" \
          DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}" \
          tools/patch-dockerhub.sh ${{ env.IMAGE_NAME }} "Debian/Ubuntu with apt-fast installed."
  ubuntu:
    name: Publish the ${{ matrix.base_image }} image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ matrix.base_image }}-buildx-${{ github.sha }}
          path: /tmp/.buildx-cache-${{ matrix.base_image }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.base_image }}-buildx-
      - name: Generate Dockerfile
        run: printf 'FROM ubuntu:%s\nADD install.sh /\nRUN ./install.sh\n' ${{ matrix.base_image }} > Dockerfile
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Run Buildx and Push it to DockerHub
        uses: docker/build-push-action@v3
        with:
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.base_image }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.base_image }}-new,mode=max
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.base_image }}
      - name: Move cache
        run: |
          rm -fr /tmp/.buildx-cache-${{ matrix.base_image }}
          mv /tmp/.buildx-cache-${{ matrix.base_image }}-new /tmp/.buildx-cache-${{ matrix.base_image }}
    strategy:
      matrix:
        base_image:
          - focal
          - jammy
name: Publish
on:
  create:
    tags:
      - v[0-9]+(\.[0-9]+)*
